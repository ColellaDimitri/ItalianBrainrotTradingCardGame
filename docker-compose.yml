services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: brainrot
      POSTGRES_USER: brainrot
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      # Utilise un volume nommé (pas un bind-mount de ./db/data) pour éviter les permissions
      - pgdata:/var/lib/postgresql/data
      # Monte tes scripts d'init (SQL) en lecture seule s'ils existent
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "brainrot" ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432" # optionnel pour accéder depuis ta machine

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      PORT: "3000"
      # IMPORTANT : hostname = **nom du service** 'postgres', pas localhost
      DATABASE_URL: postgres://brainrot:${POSTGRES_PASSWORD:-changeme}@postgres:5432/brainrot
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8081:3000"

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        # si ton front a besoin de l’URL de l’API au build (Vite) :
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:3000}
    ports:
      - "8080:80"
    depends_on:
      - api

volumes:
  pgdata:
